import csv
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

def process_and_visualize_movies(file_path):
    """Process the movie data and visualize the top-rated movies."""
    # Read the CSV file
    df = pd.read_csv(file_path)
    
    # Sort the movies by rating and get the top 10
    top_rated_movies = df.sort_values(by='Rating', ascending=False).head(10)
    print(top_rated_movies)
    
    # Create a bar plot of the top-rated movies
    seabornchart = sns.barplot(x=top_rated_movies['Title'], y=top_rated_movies['Rating'])
    plt.xticks(rotation=90)  # Rotate the x labels for better readability
    plt.show()

    # Save the graph as an image file
    graph_path = 'top_rated_movies_graph.png'
    plt.savefig(graph_path)
    print(f"Graph saved to {graph_path}")
    
    # Save the top-rated movies to a new CSV file
    csv_path = 'top_rated_movies.csv'
    top_rated_movies.to_csv(csv_path, index=False)
    print(f"CSV file saved to {csv_path}")

    # Read the CSV file
    df = pd.read_csv(file_path)
    
    # Group by Director and count
    director_counts = df.groupby('Director').count()
    
    # Get the number of unique directors
    unique_directors = df['Director'].nunique()
    print(f"Total unique directors: {unique_directors}")
    
    # Get the top 10 directors by movie count
    top_directors = df['Director'].value_counts().head(10)
    print("Top 10 Directors by Movie Count:")
    print(top_directors)
    
    # Get the best-rated movies
    best_rated_movies = df.groupby('Title')['Rating'].mean().sort_values(ascending=False)
    print("Top 10 Best Rated Movies:")
    print(best_rated_movies.head(10))

    # Group by Director and count
    director_counts = df.groupby('Director').count()
    
    # Get the number of unique directors
    unique_directors = df['Director'].nunique()
    print(f"Total unique directors: {unique_directors}")
    
    # Get the top 10 directors by movie count
    top_directors = df['Director'].value_counts().head(10)
    print("Top 10 Directors by Movie Count:")
    print(top_directors)
    
    # Create a bar plot of the top directors
    seabornchart = sns.barplot(x=top_directors.index, y=top_directors.values)
    plt.xticks(rotation=90)  # Rotate the x labels for better readability
    plt.show()

     # Count the number of documentary movies
    documentary_count = df['Genre'].value_counts().get('Documentary', 0)
    print("Number of movies in the Documentary genre:", documentary_count)
    
    # Filter the DataFrame for documentary movies
    documentary_count_df = df[df['Genre'] == 'Documentary']
    
    # Find the best-rated documentary movie
    if not documentary_count_df.empty:
        best_documentary_movie = documentary_count_df.loc[documentary_count_df['Rating'].idxmax()]
        print("Best Documentary Movie:")
        print(best_documentary_movie)
    else:
        print("No documentary movies found.")

     # Read the CSV file into a DataFrame
    df = pd.read_csv(file_path)
    print(df)
    
    # Read the CSV file into a list of dictionaries
    with open(file_path, mode='r') as file:
        movies = list(csv.DictReader(file))
    
    # Print the number of movies
    print(f"Total number of movies: {len(movies)}")
    
    # Print the first movie
    print("First movie entry:", movies[0])
    
    # Get unique genres
    unique_genres = {row['Genre'] for row in movies}
    print("Unique genres:", unique_genres)

    # Filter movies by genre 'Horror'
    horror_movies = [row for row in movies if row['Genre'] == 'Horror']
    print(f"Number of horror movies: {len(horror_movies)}")
    if horror_movies:
        print("First horror movie entry:", horror_movies[0])
    
    # Get unique ratings
    unique_ratings = {row['Rating'] for row in movies}
    print("Unique ratings:", unique_ratings)
    
    # Filter movies by rating '8.0'
    rating_8_movies = [row for row in movies if row['Rating'] == '8.0']
    print(f"Number of movies with rating 8.0: {len(rating_8_movies)}")

    # Filter horror movies with rating '8.0'
    horror_rating_8_movies = [row for row in movies if row['Genre'] == 'Horror' and row['Rating'] == '8.0']
    print(f"Number of horror movies with rating 8.0: {len(horror_rating_8_movies)}")
    if len(horror_rating_8_movies) > 0:
        print("First horror movie with rating 8.0:", horror_rating_8_movies[0])
    if len(horror_rating_8_movies) > 1:
        print("Second horror movie with rating 8.0:", horror_rating_8_movies[1])
    
    # Get all movie ratings
    movie_ratings = [row['Rating'] for row in movies]
    
    # Get the most common ratings using Counter
    most_common_ratings = Counter(df['Rating'])
    print("Most common ratings:", most_common_ratings)
    print("Top 10 most common ratings:", most_common_ratings.most_common(10))

    # Get the top 5 most common ratings using value_counts
    value_counts = df['Rating'].value_counts(normalize=True)
    top_5_counts = value_counts.head(5)
    print("Top 5 most common ratings (normalized):")
    print(top_5_counts)
    
    # Visualize the most common ratings using Seaborn
    sns.barplot(x=top_5_counts.index, y=top_5_counts.values)
    plt.xlabel('Rating')
    plt.ylabel('Proportion')
    plt.title('Top 5 Most Common Ratings')
    plt.show()

